package com.multi.mvc02;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import org.springframework.stereotype.Component;

import com.mysql.cj.xdevapi.Result;

@Component
public class CarDAO {
	public void insert(CarDTO bag) { // String id
		System.out.println(bag); // toString()호출, 가방에 들어있는 값들이 프린트
		// 자바에서 DBMS를 연결하려고 함.
		// JDBC 프로그래밍 절차
		// 4단계 절차
		// 1. 드라이버 설정- 드라이버(커넥터) 로딩
		// db의 유형, 버전에 따라 매우 많음.
		// 필요할 때 다운로드 받아 써야 함.
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			// 특정한 위치에 있는 드라이버 파일을 램에 읽어들여 설정
			System.out.println("1. 드라이버 설정 성공.@@@@");
			// 2. db연결 mySQL: school, oracle: xe
			String url = "jdbc:mysql://localhost:3306/mydb";
			String user = "abcd";
			String password = "12345678";
			Connection con = DriverManager.getConnection(url, user, password); // Connection
			System.out.println("2. db연결 성공.@@@@@@");
			// 3. sql문을 만든다.
			String sql = "insert into car values (null, ?, ?, ?)";
			// 준비된 문장(Preparedstatement)
			PreparedStatement ps = con.prepareStatement(sql);
			ps.setString(1, bag.getName()); // 2번 물음표에 pw에 저장해놓은 값을 스트링으로 넣어줘!
			ps.setString(2, bag.getUrl()); // 3번 물음표에 name에 저장해놓은 값을 스트링으로 넣어줘!
			ps.setString(3, bag.getImg()); // 4번 물음표에 tel에 저장해놓은 값을 스트링으로 넣어줘!
			System.out.println("3. sql문 생성 성공.@@@@@");
			// String site = "http://www.naver.com";
			// Url url = new Url(site); //객체화!!
			// 4. sql문을 db서버에 보낸다. --> 결과가 어떻게 되었는지 자바프로그램 알려줌.
			String result2 = "실패";
			try {
				int result = ps.executeUpdate(); // r의 결과는 table, cud는 숫자(실행된row수) //1
				System.out.println("4. sql문 db서버로 전송 성공. @@@@@ 반영된 row수 >>" + result);
				if (result == 1) {
					result2 = "성공";
				}
			} catch (Exception e) {
				System.out.println("회원가입시 에러발생");
			}
			// JOptionPane.showMessageDialog(null, result2); //컴파일 에러
			ps.close();
			con.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	} // insert
	
	// 기능하나만 메서드 하나 구현(탈퇴기능)
		public int delete(CarDTO bag) {
			int result = 0; // delete가 안되었을때.!
			// 자바에서 DBMS를 연결하려고 함.
			// JDBC 프로그래밍 절차
			// 4단계 절차
			// 1. 드라이버 설정- 드라이버(커넥터) 로딩
			// db의 유형, 버전에 따라 매우 많음.
			// 필요할 때 다운로드 받아 써야 함.
			try {
				Class.forName("com.mysql.cj.jdbc.Driver");
				// 특정한 위치에 있는 드라이버 파일을 램에 읽어들여 설정
				System.out.println("1. 드라이버 설정 성공.@@@@");
				// 2. db연결 mySQL: school, oracle: xe
				String url = "jdbc:mysql://localhost:3306/mydb";
				String user = "abcd";
				String password = "12345678";
				Connection con = DriverManager.getConnection(url, user, password); // Connection
				System.out.println("2. db연결 성공.@@@@@@");
				// 3. sql문을 만든다.
				String sql = "delete from car where id = ?";
				// 준비된 문장(Preparedstatement)
				PreparedStatement ps = con.prepareStatement(sql);
				ps.setInt(1, bag.getId()); // 1번 물음표에 id에 저장해놓은 값을 스트링으로 넣어줘!
				System.out.println("3. sql문 생성 성공.@@@@@");
				// String site = "http://www.naver.com";
				// Url url = new Url(site); //객체화!!
				// 4. sql문을 db서버에 보낸다. --> 결과가 어떻게 되었는지 자바프로그램 알려줌.
				result = ps.executeUpdate(); // r의 결과는 table, cud는 숫자(실행된row수) //1
				System.out.println("4. sql문 db서버로 전송 성공. @@@@@ 반영된 row수 >>" + result);
				ps.close();
				con.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
			return result;
		} // delete
		
		// 기능하나만 메서드 하나 구현(탈퇴기능)
		public void update(CarDTO bag) {
		
			// 자바에서 DBMS를 연결하려고 함.
			// JDBC 프로그래밍 절차
			// 4단계 절차
			// 1. 드라이버 설정- 드라이버(커넥터) 로딩
			// db의 유형, 버전에 따라 매우 많음.
			// 필요할 때 다운로드 받아 써야 함.
			try {
				Class.forName("com.mysql.cj.jdbc.Driver");
				// 특정한 위치에 있는 드라이버 파일을 램에 읽어들여 설정
				System.out.println("1. 드라이버 설정 성공.@@@@");
				// 2. db연결 mySQL: school, oracle: xe
				String url = "jdbc:mysql://localhost:3306/mydb";
				String user = "abcd";
				String password = "12345678";
				Connection con = DriverManager.getConnection(url, user, password); // Connection
				System.out.println("2. db연결 성공.@@@@@@");
				// 3. sql문을 만든다.
				String sql = "update car set name = ? where id = ?";
				// 준비된 문장(Preparedstatement)
				PreparedStatement ps = con.prepareStatement(sql);
				ps.setString(1, bag.getName()); // 1번 물음표에 id에 저장해놓은 값을 스트링으로 넣어줘!
				ps.setInt(2, bag.getId()); 
				System.out.println("3. sql문 생성 성공.@@@@@");
				// String site = "http://www.naver.com";
				// Url url = new Url(site); //객체화!!
				// 4. sql문을 db서버에 보낸다. --> 결과가 어떻게 되었는지 자바프로그램 알려줌.
				ps.executeUpdate(); // r의 결과는 table, cud는 숫자(실행된row수) //1
				System.out.println("4. sql문 전송 완료.@@@@@");
				ps.close();
				con.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
			
		} // delete
		
		
		
		public CarDTO select(CarDTO bag) {
			CarDTO bag2 = null;
			try {
				Class.forName("com.mysql.cj.jdbc.Driver");
				// 특정한 위치에 있는 드라이버 파일을 램에 읽어들여 설정
				System.out.println("1. 드라이버 설정 성공.@@@@");
				// 2. db연결 mySQL: school, oracle: xe
				String url = "jdbc:mysql://localhost:3306/mydb";
				String user = "abcd";
				String password = "12345678";
				Connection con = DriverManager.getConnection(url, user, password); // Connection
				System.out.println("2. db연결 성공.@@@@@@");
				// 3. sql문을 만든다.
				String sql = "select * from car where id = ?";
				// 준비된 문장(Preparedstatement)
				PreparedStatement ps = con.prepareStatement(sql);
				ps.setInt(1, bag.getId()); // 1번 물음표에 id에 저장해놓은 값을 스트링으로 넣어줘!
				System.out.println("3. sql문 생성 성공.@@@@@");
				// String site = "http://www.naver.com";
				// Url url = new Url(site); //객체화!!
				// 4. sql문을 db서버에 보낸다. --> 결과가 어떻게 되었는지 자바프로그램 알려줌.
				ResultSet rs = ps.executeQuery(); // r의 결과는 table, cud는 숫자(실행된row수) //1
				System.out.println("4. sql문 db서버로 전송 성공. @@@@@ 반영된 row수 >>" + rs);
				while(rs.next()) {
					bag2 = new CarDTO();
					bag2.setId(rs.getInt(1));
					bag2.setName(rs.getString(2));
					bag2.setUrl(rs.getString(3));
					bag2.setImg(rs.getString(4));
				}
				
				rs.close();
				ps.close();
				con.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
			return bag2;
			
		}
}
